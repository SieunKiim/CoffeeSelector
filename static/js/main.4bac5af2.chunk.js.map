{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["MultiTouchComponent","touches","setTouches","useState","React","createElement","style","width","height","backgroundColor","position","touchAction","onTouchStart","event","newTouches","onTouchMove","onTouchEnd","handleTouchEnd","map","touch","index","key","left","clientX","top","clientY","borderRadius","opacity","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","App"],"mappings":"+JAqDeA,MAlDaA,KAC1B,MAAOC,EAASC,GAAcC,mBAAS,IAgBvC,OACEC,IAAAC,cAAA,OACEC,MAAO,CACLC,MAAO,QACPC,OAAQ,QACRC,gBAAiB,YACjBC,SAAU,WACVC,YAAa,QAEfC,aAvBsBC,IACxB,MAAMC,EAAa,IAAID,EAAMZ,SAC7BC,EAAWY,IAsBTC,YAnBqBF,IACvB,MAAMC,EAAa,IAAID,EAAMZ,SAC7BC,EAAWY,IAkBTE,WAfmBC,KACrBf,EAAW,MAgBRD,EAAQiB,IAAI,CAACC,EAAOC,IACnBhB,IAAAC,cAAA,OACEgB,IAAKD,EACLd,MAAO,CACLI,SAAU,WACVY,KAAMH,EAAMI,QAAU,GACtBC,IAAKL,EAAMM,QAAU,GACrBlB,MAAO,QACPC,OAAQ,QACRkB,aAAc,MACdjB,gBAAiB,OACjBkB,QAAS,SChCNC,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHzC,IAAAC,cAACD,IAAM0C,WAAU,KACf1C,IAAAC,cAAC0C,EAAG,QAORnB","file":"static/js/main.4bac5af2.chunk.js","sourcesContent":["import React, { useState } from 'react';\n// import './App.css';\n\nconst MultiTouchComponent = () => {\n  const [touches, setTouches] = useState([]);\n\n  const handleTouchStart = (event) => {\n    const newTouches = [...event.touches];\n    setTouches(newTouches);\n  };\n\n  const handleTouchMove = (event) => {\n    const newTouches = [...event.touches];\n    setTouches(newTouches);\n  };\n\n  const handleTouchEnd = () => {\n    setTouches([]);\n  };\n\n  return (\n    <div\n      style={{\n        width: '100vw',\n        height: '100vh',\n        backgroundColor: 'lightgray',\n        position: 'relative',\n        touchAction: 'none'\n      }}\n      onTouchStart={handleTouchStart}\n      onTouchMove={handleTouchMove}\n      onTouchEnd={handleTouchEnd}\n    >\n      {touches.map((touch, index) => (\n        <div\n          key={index}\n          style={{\n            position: 'absolute',\n            left: touch.clientX - 50, // Adjust position for touch feedback\n            top: touch.clientY - 50, // Adjust position for touch feedback\n            width: '100px',\n            height: '100px',\n            borderRadius: '50%',\n            backgroundColor: 'blue',\n            opacity: 0.5,\n          }}\n        >\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default MultiTouchComponent;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}